# Makefile.in generated by automake 1.9.5 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = $(chamber_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/chamber
pkglibdir = $(libdir)/chamber
pkgincludedir = $(includedir)/chamber
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
bin_PROGRAMS = chamber$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = chamber-bitmap.$(OBJEXT) chamber-font.$(OBJEXT) \
	chamber-gamemode.$(OBJEXT) chamber-gfxhelp.$(OBJEXT) \
	chamber-initialize.$(OBJEXT) chamber-main.$(OBJEXT) \
	chamber-misc.$(OBJEXT) chamber-scoremodes.$(OBJEXT) \
	chamber-symtab.$(OBJEXT)
am__objects_2 = chamber-blackout.$(OBJEXT) chamber-bg1.$(OBJEXT) \
	chamber-blueball.$(OBJEXT) chamber-bluepad.$(OBJEXT) \
	chamber-cyanball.$(OBJEXT) chamber-cyanpad.$(OBJEXT) \
	chamber-fastpad.$(OBJEXT) chamber-greenball.$(OBJEXT) \
	chamber-greenpad.$(OBJEXT) chamber-help.$(OBJEXT) \
	chamber-medium_font.$(OBJEXT) chamber-purpleball.$(OBJEXT) \
	chamber-purplepad.$(OBJEXT) chamber-redball.$(OBJEXT) \
	chamber-redpad.$(OBJEXT) chamber-yellowball.$(OBJEXT) \
	chamber-slowpad.$(OBJEXT) chamber-usage.$(OBJEXT) \
	chamber-yellowpad.$(OBJEXT)
am_chamber_OBJECTS = $(am__objects_1) $(am__objects_2)
chamber_OBJECTS = $(am_chamber_OBJECTS)
chamber_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(chamber_SOURCES)
DIST_SOURCES = $(chamber_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.9
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"chamber\" -DPACKAGE_TARNAME=\"chamber\" -DPACKAGE_VERSION=\"0.8.7\" -DPACKAGE_STRING=\"chamber\ 0.8.7\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"chamber\" -DVERSION=\"0.8.7\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_SDL_IMAGE=1 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = makeinfo
OBJEXT = o
PACKAGE = chamber
PACKAGE_BUGREPORT = 
PACKAGE_NAME = chamber
PACKAGE_STRING = chamber 0.8.7
PACKAGE_TARNAME = chamber
PACKAGE_VERSION = 0.8.7
PATH_SEPARATOR = :
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL -lSDL_image
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.8.7
ac_ct_CC = gcc
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/dsh/src/chamber-0.8.7/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc

# Source hand coded:
humansrc = bitmap.c bitmap.h bitmaplist.h \
           defines.h font.c font.h fontlist.h gamemode.c gamemode.h \
           gfxhelp.c gfxhelp.h initialize.c initialize.h main.c misc.c \
           scoremodes.c scoremodes.h surfs.h symtab.c symtab.h

# Source generated by a utility, often very big, so don't ``indent'' it:
generatedsrc = blackout.c bg1.c  blueball.c bluepad.c cyanball.c cyanpad.c \
               fastpad.c greenball.c greenpad.c help.c medium_font.c \
               purpleball.c purplepad.c redball.c redpad.c yellowball.c \
               slowpad.c usage.c yellowpad.c

configfile = ${HOME}/.chamber/configuration
chamber_SOURCES = ${humansrc} ${generatedsrc}
chamber_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT                   \
                 -DPROGRAM=\"chamber\"        \
                 -DCONFIGFILE=\"${configfile}\" \
                 ${AM_CFLAGS}

chamber_LDADD = -L/usr/lib -lSDL -lSDL_image
EXTRA_DIST = borland.mk
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
chamber$(EXEEXT): $(chamber_OBJECTS) $(chamber_DEPENDENCIES) 
	@rm -f chamber$(EXEEXT)
	$(LINK) $(chamber_LDFLAGS) $(chamber_OBJECTS) $(chamber_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/chamber-bg1.Po
include ./$(DEPDIR)/chamber-bitmap.Po
include ./$(DEPDIR)/chamber-blackout.Po
include ./$(DEPDIR)/chamber-blueball.Po
include ./$(DEPDIR)/chamber-bluepad.Po
include ./$(DEPDIR)/chamber-cyanball.Po
include ./$(DEPDIR)/chamber-cyanpad.Po
include ./$(DEPDIR)/chamber-fastpad.Po
include ./$(DEPDIR)/chamber-font.Po
include ./$(DEPDIR)/chamber-gamemode.Po
include ./$(DEPDIR)/chamber-gfxhelp.Po
include ./$(DEPDIR)/chamber-greenball.Po
include ./$(DEPDIR)/chamber-greenpad.Po
include ./$(DEPDIR)/chamber-help.Po
include ./$(DEPDIR)/chamber-initialize.Po
include ./$(DEPDIR)/chamber-main.Po
include ./$(DEPDIR)/chamber-medium_font.Po
include ./$(DEPDIR)/chamber-misc.Po
include ./$(DEPDIR)/chamber-purpleball.Po
include ./$(DEPDIR)/chamber-purplepad.Po
include ./$(DEPDIR)/chamber-redball.Po
include ./$(DEPDIR)/chamber-redpad.Po
include ./$(DEPDIR)/chamber-scoremodes.Po
include ./$(DEPDIR)/chamber-slowpad.Po
include ./$(DEPDIR)/chamber-symtab.Po
include ./$(DEPDIR)/chamber-usage.Po
include ./$(DEPDIR)/chamber-yellowball.Po
include ./$(DEPDIR)/chamber-yellowpad.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

chamber-bitmap.o: bitmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-bitmap.o -MD -MP -MF "$(DEPDIR)/chamber-bitmap.Tpo" -c -o chamber-bitmap.o `test -f 'bitmap.c' || echo '$(srcdir)/'`bitmap.c; \
	then mv -f "$(DEPDIR)/chamber-bitmap.Tpo" "$(DEPDIR)/chamber-bitmap.Po"; else rm -f "$(DEPDIR)/chamber-bitmap.Tpo"; exit 1; fi
#	source='bitmap.c' object='chamber-bitmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-bitmap.o `test -f 'bitmap.c' || echo '$(srcdir)/'`bitmap.c

chamber-bitmap.obj: bitmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-bitmap.obj -MD -MP -MF "$(DEPDIR)/chamber-bitmap.Tpo" -c -o chamber-bitmap.obj `if test -f 'bitmap.c'; then $(CYGPATH_W) 'bitmap.c'; else $(CYGPATH_W) '$(srcdir)/bitmap.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-bitmap.Tpo" "$(DEPDIR)/chamber-bitmap.Po"; else rm -f "$(DEPDIR)/chamber-bitmap.Tpo"; exit 1; fi
#	source='bitmap.c' object='chamber-bitmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-bitmap.obj `if test -f 'bitmap.c'; then $(CYGPATH_W) 'bitmap.c'; else $(CYGPATH_W) '$(srcdir)/bitmap.c'; fi`

chamber-font.o: font.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-font.o -MD -MP -MF "$(DEPDIR)/chamber-font.Tpo" -c -o chamber-font.o `test -f 'font.c' || echo '$(srcdir)/'`font.c; \
	then mv -f "$(DEPDIR)/chamber-font.Tpo" "$(DEPDIR)/chamber-font.Po"; else rm -f "$(DEPDIR)/chamber-font.Tpo"; exit 1; fi
#	source='font.c' object='chamber-font.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-font.o `test -f 'font.c' || echo '$(srcdir)/'`font.c

chamber-font.obj: font.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-font.obj -MD -MP -MF "$(DEPDIR)/chamber-font.Tpo" -c -o chamber-font.obj `if test -f 'font.c'; then $(CYGPATH_W) 'font.c'; else $(CYGPATH_W) '$(srcdir)/font.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-font.Tpo" "$(DEPDIR)/chamber-font.Po"; else rm -f "$(DEPDIR)/chamber-font.Tpo"; exit 1; fi
#	source='font.c' object='chamber-font.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-font.obj `if test -f 'font.c'; then $(CYGPATH_W) 'font.c'; else $(CYGPATH_W) '$(srcdir)/font.c'; fi`

chamber-gamemode.o: gamemode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-gamemode.o -MD -MP -MF "$(DEPDIR)/chamber-gamemode.Tpo" -c -o chamber-gamemode.o `test -f 'gamemode.c' || echo '$(srcdir)/'`gamemode.c; \
	then mv -f "$(DEPDIR)/chamber-gamemode.Tpo" "$(DEPDIR)/chamber-gamemode.Po"; else rm -f "$(DEPDIR)/chamber-gamemode.Tpo"; exit 1; fi
#	source='gamemode.c' object='chamber-gamemode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-gamemode.o `test -f 'gamemode.c' || echo '$(srcdir)/'`gamemode.c

chamber-gamemode.obj: gamemode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-gamemode.obj -MD -MP -MF "$(DEPDIR)/chamber-gamemode.Tpo" -c -o chamber-gamemode.obj `if test -f 'gamemode.c'; then $(CYGPATH_W) 'gamemode.c'; else $(CYGPATH_W) '$(srcdir)/gamemode.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-gamemode.Tpo" "$(DEPDIR)/chamber-gamemode.Po"; else rm -f "$(DEPDIR)/chamber-gamemode.Tpo"; exit 1; fi
#	source='gamemode.c' object='chamber-gamemode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-gamemode.obj `if test -f 'gamemode.c'; then $(CYGPATH_W) 'gamemode.c'; else $(CYGPATH_W) '$(srcdir)/gamemode.c'; fi`

chamber-gfxhelp.o: gfxhelp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-gfxhelp.o -MD -MP -MF "$(DEPDIR)/chamber-gfxhelp.Tpo" -c -o chamber-gfxhelp.o `test -f 'gfxhelp.c' || echo '$(srcdir)/'`gfxhelp.c; \
	then mv -f "$(DEPDIR)/chamber-gfxhelp.Tpo" "$(DEPDIR)/chamber-gfxhelp.Po"; else rm -f "$(DEPDIR)/chamber-gfxhelp.Tpo"; exit 1; fi
#	source='gfxhelp.c' object='chamber-gfxhelp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-gfxhelp.o `test -f 'gfxhelp.c' || echo '$(srcdir)/'`gfxhelp.c

chamber-gfxhelp.obj: gfxhelp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-gfxhelp.obj -MD -MP -MF "$(DEPDIR)/chamber-gfxhelp.Tpo" -c -o chamber-gfxhelp.obj `if test -f 'gfxhelp.c'; then $(CYGPATH_W) 'gfxhelp.c'; else $(CYGPATH_W) '$(srcdir)/gfxhelp.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-gfxhelp.Tpo" "$(DEPDIR)/chamber-gfxhelp.Po"; else rm -f "$(DEPDIR)/chamber-gfxhelp.Tpo"; exit 1; fi
#	source='gfxhelp.c' object='chamber-gfxhelp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-gfxhelp.obj `if test -f 'gfxhelp.c'; then $(CYGPATH_W) 'gfxhelp.c'; else $(CYGPATH_W) '$(srcdir)/gfxhelp.c'; fi`

chamber-initialize.o: initialize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-initialize.o -MD -MP -MF "$(DEPDIR)/chamber-initialize.Tpo" -c -o chamber-initialize.o `test -f 'initialize.c' || echo '$(srcdir)/'`initialize.c; \
	then mv -f "$(DEPDIR)/chamber-initialize.Tpo" "$(DEPDIR)/chamber-initialize.Po"; else rm -f "$(DEPDIR)/chamber-initialize.Tpo"; exit 1; fi
#	source='initialize.c' object='chamber-initialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-initialize.o `test -f 'initialize.c' || echo '$(srcdir)/'`initialize.c

chamber-initialize.obj: initialize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-initialize.obj -MD -MP -MF "$(DEPDIR)/chamber-initialize.Tpo" -c -o chamber-initialize.obj `if test -f 'initialize.c'; then $(CYGPATH_W) 'initialize.c'; else $(CYGPATH_W) '$(srcdir)/initialize.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-initialize.Tpo" "$(DEPDIR)/chamber-initialize.Po"; else rm -f "$(DEPDIR)/chamber-initialize.Tpo"; exit 1; fi
#	source='initialize.c' object='chamber-initialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-initialize.obj `if test -f 'initialize.c'; then $(CYGPATH_W) 'initialize.c'; else $(CYGPATH_W) '$(srcdir)/initialize.c'; fi`

chamber-main.o: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-main.o -MD -MP -MF "$(DEPDIR)/chamber-main.Tpo" -c -o chamber-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/chamber-main.Tpo" "$(DEPDIR)/chamber-main.Po"; else rm -f "$(DEPDIR)/chamber-main.Tpo"; exit 1; fi
#	source='main.c' object='chamber-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

chamber-main.obj: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-main.obj -MD -MP -MF "$(DEPDIR)/chamber-main.Tpo" -c -o chamber-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-main.Tpo" "$(DEPDIR)/chamber-main.Po"; else rm -f "$(DEPDIR)/chamber-main.Tpo"; exit 1; fi
#	source='main.c' object='chamber-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

chamber-misc.o: misc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-misc.o -MD -MP -MF "$(DEPDIR)/chamber-misc.Tpo" -c -o chamber-misc.o `test -f 'misc.c' || echo '$(srcdir)/'`misc.c; \
	then mv -f "$(DEPDIR)/chamber-misc.Tpo" "$(DEPDIR)/chamber-misc.Po"; else rm -f "$(DEPDIR)/chamber-misc.Tpo"; exit 1; fi
#	source='misc.c' object='chamber-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-misc.o `test -f 'misc.c' || echo '$(srcdir)/'`misc.c

chamber-misc.obj: misc.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-misc.obj -MD -MP -MF "$(DEPDIR)/chamber-misc.Tpo" -c -o chamber-misc.obj `if test -f 'misc.c'; then $(CYGPATH_W) 'misc.c'; else $(CYGPATH_W) '$(srcdir)/misc.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-misc.Tpo" "$(DEPDIR)/chamber-misc.Po"; else rm -f "$(DEPDIR)/chamber-misc.Tpo"; exit 1; fi
#	source='misc.c' object='chamber-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-misc.obj `if test -f 'misc.c'; then $(CYGPATH_W) 'misc.c'; else $(CYGPATH_W) '$(srcdir)/misc.c'; fi`

chamber-scoremodes.o: scoremodes.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-scoremodes.o -MD -MP -MF "$(DEPDIR)/chamber-scoremodes.Tpo" -c -o chamber-scoremodes.o `test -f 'scoremodes.c' || echo '$(srcdir)/'`scoremodes.c; \
	then mv -f "$(DEPDIR)/chamber-scoremodes.Tpo" "$(DEPDIR)/chamber-scoremodes.Po"; else rm -f "$(DEPDIR)/chamber-scoremodes.Tpo"; exit 1; fi
#	source='scoremodes.c' object='chamber-scoremodes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-scoremodes.o `test -f 'scoremodes.c' || echo '$(srcdir)/'`scoremodes.c

chamber-scoremodes.obj: scoremodes.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-scoremodes.obj -MD -MP -MF "$(DEPDIR)/chamber-scoremodes.Tpo" -c -o chamber-scoremodes.obj `if test -f 'scoremodes.c'; then $(CYGPATH_W) 'scoremodes.c'; else $(CYGPATH_W) '$(srcdir)/scoremodes.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-scoremodes.Tpo" "$(DEPDIR)/chamber-scoremodes.Po"; else rm -f "$(DEPDIR)/chamber-scoremodes.Tpo"; exit 1; fi
#	source='scoremodes.c' object='chamber-scoremodes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-scoremodes.obj `if test -f 'scoremodes.c'; then $(CYGPATH_W) 'scoremodes.c'; else $(CYGPATH_W) '$(srcdir)/scoremodes.c'; fi`

chamber-symtab.o: symtab.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-symtab.o -MD -MP -MF "$(DEPDIR)/chamber-symtab.Tpo" -c -o chamber-symtab.o `test -f 'symtab.c' || echo '$(srcdir)/'`symtab.c; \
	then mv -f "$(DEPDIR)/chamber-symtab.Tpo" "$(DEPDIR)/chamber-symtab.Po"; else rm -f "$(DEPDIR)/chamber-symtab.Tpo"; exit 1; fi
#	source='symtab.c' object='chamber-symtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-symtab.o `test -f 'symtab.c' || echo '$(srcdir)/'`symtab.c

chamber-symtab.obj: symtab.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-symtab.obj -MD -MP -MF "$(DEPDIR)/chamber-symtab.Tpo" -c -o chamber-symtab.obj `if test -f 'symtab.c'; then $(CYGPATH_W) 'symtab.c'; else $(CYGPATH_W) '$(srcdir)/symtab.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-symtab.Tpo" "$(DEPDIR)/chamber-symtab.Po"; else rm -f "$(DEPDIR)/chamber-symtab.Tpo"; exit 1; fi
#	source='symtab.c' object='chamber-symtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-symtab.obj `if test -f 'symtab.c'; then $(CYGPATH_W) 'symtab.c'; else $(CYGPATH_W) '$(srcdir)/symtab.c'; fi`

chamber-blackout.o: blackout.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-blackout.o -MD -MP -MF "$(DEPDIR)/chamber-blackout.Tpo" -c -o chamber-blackout.o `test -f 'blackout.c' || echo '$(srcdir)/'`blackout.c; \
	then mv -f "$(DEPDIR)/chamber-blackout.Tpo" "$(DEPDIR)/chamber-blackout.Po"; else rm -f "$(DEPDIR)/chamber-blackout.Tpo"; exit 1; fi
#	source='blackout.c' object='chamber-blackout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-blackout.o `test -f 'blackout.c' || echo '$(srcdir)/'`blackout.c

chamber-blackout.obj: blackout.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-blackout.obj -MD -MP -MF "$(DEPDIR)/chamber-blackout.Tpo" -c -o chamber-blackout.obj `if test -f 'blackout.c'; then $(CYGPATH_W) 'blackout.c'; else $(CYGPATH_W) '$(srcdir)/blackout.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-blackout.Tpo" "$(DEPDIR)/chamber-blackout.Po"; else rm -f "$(DEPDIR)/chamber-blackout.Tpo"; exit 1; fi
#	source='blackout.c' object='chamber-blackout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-blackout.obj `if test -f 'blackout.c'; then $(CYGPATH_W) 'blackout.c'; else $(CYGPATH_W) '$(srcdir)/blackout.c'; fi`

chamber-bg1.o: bg1.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-bg1.o -MD -MP -MF "$(DEPDIR)/chamber-bg1.Tpo" -c -o chamber-bg1.o `test -f 'bg1.c' || echo '$(srcdir)/'`bg1.c; \
	then mv -f "$(DEPDIR)/chamber-bg1.Tpo" "$(DEPDIR)/chamber-bg1.Po"; else rm -f "$(DEPDIR)/chamber-bg1.Tpo"; exit 1; fi
#	source='bg1.c' object='chamber-bg1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-bg1.o `test -f 'bg1.c' || echo '$(srcdir)/'`bg1.c

chamber-bg1.obj: bg1.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-bg1.obj -MD -MP -MF "$(DEPDIR)/chamber-bg1.Tpo" -c -o chamber-bg1.obj `if test -f 'bg1.c'; then $(CYGPATH_W) 'bg1.c'; else $(CYGPATH_W) '$(srcdir)/bg1.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-bg1.Tpo" "$(DEPDIR)/chamber-bg1.Po"; else rm -f "$(DEPDIR)/chamber-bg1.Tpo"; exit 1; fi
#	source='bg1.c' object='chamber-bg1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-bg1.obj `if test -f 'bg1.c'; then $(CYGPATH_W) 'bg1.c'; else $(CYGPATH_W) '$(srcdir)/bg1.c'; fi`

chamber-blueball.o: blueball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-blueball.o -MD -MP -MF "$(DEPDIR)/chamber-blueball.Tpo" -c -o chamber-blueball.o `test -f 'blueball.c' || echo '$(srcdir)/'`blueball.c; \
	then mv -f "$(DEPDIR)/chamber-blueball.Tpo" "$(DEPDIR)/chamber-blueball.Po"; else rm -f "$(DEPDIR)/chamber-blueball.Tpo"; exit 1; fi
#	source='blueball.c' object='chamber-blueball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-blueball.o `test -f 'blueball.c' || echo '$(srcdir)/'`blueball.c

chamber-blueball.obj: blueball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-blueball.obj -MD -MP -MF "$(DEPDIR)/chamber-blueball.Tpo" -c -o chamber-blueball.obj `if test -f 'blueball.c'; then $(CYGPATH_W) 'blueball.c'; else $(CYGPATH_W) '$(srcdir)/blueball.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-blueball.Tpo" "$(DEPDIR)/chamber-blueball.Po"; else rm -f "$(DEPDIR)/chamber-blueball.Tpo"; exit 1; fi
#	source='blueball.c' object='chamber-blueball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-blueball.obj `if test -f 'blueball.c'; then $(CYGPATH_W) 'blueball.c'; else $(CYGPATH_W) '$(srcdir)/blueball.c'; fi`

chamber-bluepad.o: bluepad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-bluepad.o -MD -MP -MF "$(DEPDIR)/chamber-bluepad.Tpo" -c -o chamber-bluepad.o `test -f 'bluepad.c' || echo '$(srcdir)/'`bluepad.c; \
	then mv -f "$(DEPDIR)/chamber-bluepad.Tpo" "$(DEPDIR)/chamber-bluepad.Po"; else rm -f "$(DEPDIR)/chamber-bluepad.Tpo"; exit 1; fi
#	source='bluepad.c' object='chamber-bluepad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-bluepad.o `test -f 'bluepad.c' || echo '$(srcdir)/'`bluepad.c

chamber-bluepad.obj: bluepad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-bluepad.obj -MD -MP -MF "$(DEPDIR)/chamber-bluepad.Tpo" -c -o chamber-bluepad.obj `if test -f 'bluepad.c'; then $(CYGPATH_W) 'bluepad.c'; else $(CYGPATH_W) '$(srcdir)/bluepad.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-bluepad.Tpo" "$(DEPDIR)/chamber-bluepad.Po"; else rm -f "$(DEPDIR)/chamber-bluepad.Tpo"; exit 1; fi
#	source='bluepad.c' object='chamber-bluepad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-bluepad.obj `if test -f 'bluepad.c'; then $(CYGPATH_W) 'bluepad.c'; else $(CYGPATH_W) '$(srcdir)/bluepad.c'; fi`

chamber-cyanball.o: cyanball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-cyanball.o -MD -MP -MF "$(DEPDIR)/chamber-cyanball.Tpo" -c -o chamber-cyanball.o `test -f 'cyanball.c' || echo '$(srcdir)/'`cyanball.c; \
	then mv -f "$(DEPDIR)/chamber-cyanball.Tpo" "$(DEPDIR)/chamber-cyanball.Po"; else rm -f "$(DEPDIR)/chamber-cyanball.Tpo"; exit 1; fi
#	source='cyanball.c' object='chamber-cyanball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-cyanball.o `test -f 'cyanball.c' || echo '$(srcdir)/'`cyanball.c

chamber-cyanball.obj: cyanball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-cyanball.obj -MD -MP -MF "$(DEPDIR)/chamber-cyanball.Tpo" -c -o chamber-cyanball.obj `if test -f 'cyanball.c'; then $(CYGPATH_W) 'cyanball.c'; else $(CYGPATH_W) '$(srcdir)/cyanball.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-cyanball.Tpo" "$(DEPDIR)/chamber-cyanball.Po"; else rm -f "$(DEPDIR)/chamber-cyanball.Tpo"; exit 1; fi
#	source='cyanball.c' object='chamber-cyanball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-cyanball.obj `if test -f 'cyanball.c'; then $(CYGPATH_W) 'cyanball.c'; else $(CYGPATH_W) '$(srcdir)/cyanball.c'; fi`

chamber-cyanpad.o: cyanpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-cyanpad.o -MD -MP -MF "$(DEPDIR)/chamber-cyanpad.Tpo" -c -o chamber-cyanpad.o `test -f 'cyanpad.c' || echo '$(srcdir)/'`cyanpad.c; \
	then mv -f "$(DEPDIR)/chamber-cyanpad.Tpo" "$(DEPDIR)/chamber-cyanpad.Po"; else rm -f "$(DEPDIR)/chamber-cyanpad.Tpo"; exit 1; fi
#	source='cyanpad.c' object='chamber-cyanpad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-cyanpad.o `test -f 'cyanpad.c' || echo '$(srcdir)/'`cyanpad.c

chamber-cyanpad.obj: cyanpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-cyanpad.obj -MD -MP -MF "$(DEPDIR)/chamber-cyanpad.Tpo" -c -o chamber-cyanpad.obj `if test -f 'cyanpad.c'; then $(CYGPATH_W) 'cyanpad.c'; else $(CYGPATH_W) '$(srcdir)/cyanpad.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-cyanpad.Tpo" "$(DEPDIR)/chamber-cyanpad.Po"; else rm -f "$(DEPDIR)/chamber-cyanpad.Tpo"; exit 1; fi
#	source='cyanpad.c' object='chamber-cyanpad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-cyanpad.obj `if test -f 'cyanpad.c'; then $(CYGPATH_W) 'cyanpad.c'; else $(CYGPATH_W) '$(srcdir)/cyanpad.c'; fi`

chamber-fastpad.o: fastpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-fastpad.o -MD -MP -MF "$(DEPDIR)/chamber-fastpad.Tpo" -c -o chamber-fastpad.o `test -f 'fastpad.c' || echo '$(srcdir)/'`fastpad.c; \
	then mv -f "$(DEPDIR)/chamber-fastpad.Tpo" "$(DEPDIR)/chamber-fastpad.Po"; else rm -f "$(DEPDIR)/chamber-fastpad.Tpo"; exit 1; fi
#	source='fastpad.c' object='chamber-fastpad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-fastpad.o `test -f 'fastpad.c' || echo '$(srcdir)/'`fastpad.c

chamber-fastpad.obj: fastpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-fastpad.obj -MD -MP -MF "$(DEPDIR)/chamber-fastpad.Tpo" -c -o chamber-fastpad.obj `if test -f 'fastpad.c'; then $(CYGPATH_W) 'fastpad.c'; else $(CYGPATH_W) '$(srcdir)/fastpad.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-fastpad.Tpo" "$(DEPDIR)/chamber-fastpad.Po"; else rm -f "$(DEPDIR)/chamber-fastpad.Tpo"; exit 1; fi
#	source='fastpad.c' object='chamber-fastpad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-fastpad.obj `if test -f 'fastpad.c'; then $(CYGPATH_W) 'fastpad.c'; else $(CYGPATH_W) '$(srcdir)/fastpad.c'; fi`

chamber-greenball.o: greenball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-greenball.o -MD -MP -MF "$(DEPDIR)/chamber-greenball.Tpo" -c -o chamber-greenball.o `test -f 'greenball.c' || echo '$(srcdir)/'`greenball.c; \
	then mv -f "$(DEPDIR)/chamber-greenball.Tpo" "$(DEPDIR)/chamber-greenball.Po"; else rm -f "$(DEPDIR)/chamber-greenball.Tpo"; exit 1; fi
#	source='greenball.c' object='chamber-greenball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-greenball.o `test -f 'greenball.c' || echo '$(srcdir)/'`greenball.c

chamber-greenball.obj: greenball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-greenball.obj -MD -MP -MF "$(DEPDIR)/chamber-greenball.Tpo" -c -o chamber-greenball.obj `if test -f 'greenball.c'; then $(CYGPATH_W) 'greenball.c'; else $(CYGPATH_W) '$(srcdir)/greenball.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-greenball.Tpo" "$(DEPDIR)/chamber-greenball.Po"; else rm -f "$(DEPDIR)/chamber-greenball.Tpo"; exit 1; fi
#	source='greenball.c' object='chamber-greenball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-greenball.obj `if test -f 'greenball.c'; then $(CYGPATH_W) 'greenball.c'; else $(CYGPATH_W) '$(srcdir)/greenball.c'; fi`

chamber-greenpad.o: greenpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-greenpad.o -MD -MP -MF "$(DEPDIR)/chamber-greenpad.Tpo" -c -o chamber-greenpad.o `test -f 'greenpad.c' || echo '$(srcdir)/'`greenpad.c; \
	then mv -f "$(DEPDIR)/chamber-greenpad.Tpo" "$(DEPDIR)/chamber-greenpad.Po"; else rm -f "$(DEPDIR)/chamber-greenpad.Tpo"; exit 1; fi
#	source='greenpad.c' object='chamber-greenpad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-greenpad.o `test -f 'greenpad.c' || echo '$(srcdir)/'`greenpad.c

chamber-greenpad.obj: greenpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-greenpad.obj -MD -MP -MF "$(DEPDIR)/chamber-greenpad.Tpo" -c -o chamber-greenpad.obj `if test -f 'greenpad.c'; then $(CYGPATH_W) 'greenpad.c'; else $(CYGPATH_W) '$(srcdir)/greenpad.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-greenpad.Tpo" "$(DEPDIR)/chamber-greenpad.Po"; else rm -f "$(DEPDIR)/chamber-greenpad.Tpo"; exit 1; fi
#	source='greenpad.c' object='chamber-greenpad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-greenpad.obj `if test -f 'greenpad.c'; then $(CYGPATH_W) 'greenpad.c'; else $(CYGPATH_W) '$(srcdir)/greenpad.c'; fi`

chamber-help.o: help.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-help.o -MD -MP -MF "$(DEPDIR)/chamber-help.Tpo" -c -o chamber-help.o `test -f 'help.c' || echo '$(srcdir)/'`help.c; \
	then mv -f "$(DEPDIR)/chamber-help.Tpo" "$(DEPDIR)/chamber-help.Po"; else rm -f "$(DEPDIR)/chamber-help.Tpo"; exit 1; fi
#	source='help.c' object='chamber-help.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-help.o `test -f 'help.c' || echo '$(srcdir)/'`help.c

chamber-help.obj: help.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-help.obj -MD -MP -MF "$(DEPDIR)/chamber-help.Tpo" -c -o chamber-help.obj `if test -f 'help.c'; then $(CYGPATH_W) 'help.c'; else $(CYGPATH_W) '$(srcdir)/help.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-help.Tpo" "$(DEPDIR)/chamber-help.Po"; else rm -f "$(DEPDIR)/chamber-help.Tpo"; exit 1; fi
#	source='help.c' object='chamber-help.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-help.obj `if test -f 'help.c'; then $(CYGPATH_W) 'help.c'; else $(CYGPATH_W) '$(srcdir)/help.c'; fi`

chamber-medium_font.o: medium_font.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-medium_font.o -MD -MP -MF "$(DEPDIR)/chamber-medium_font.Tpo" -c -o chamber-medium_font.o `test -f 'medium_font.c' || echo '$(srcdir)/'`medium_font.c; \
	then mv -f "$(DEPDIR)/chamber-medium_font.Tpo" "$(DEPDIR)/chamber-medium_font.Po"; else rm -f "$(DEPDIR)/chamber-medium_font.Tpo"; exit 1; fi
#	source='medium_font.c' object='chamber-medium_font.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-medium_font.o `test -f 'medium_font.c' || echo '$(srcdir)/'`medium_font.c

chamber-medium_font.obj: medium_font.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-medium_font.obj -MD -MP -MF "$(DEPDIR)/chamber-medium_font.Tpo" -c -o chamber-medium_font.obj `if test -f 'medium_font.c'; then $(CYGPATH_W) 'medium_font.c'; else $(CYGPATH_W) '$(srcdir)/medium_font.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-medium_font.Tpo" "$(DEPDIR)/chamber-medium_font.Po"; else rm -f "$(DEPDIR)/chamber-medium_font.Tpo"; exit 1; fi
#	source='medium_font.c' object='chamber-medium_font.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-medium_font.obj `if test -f 'medium_font.c'; then $(CYGPATH_W) 'medium_font.c'; else $(CYGPATH_W) '$(srcdir)/medium_font.c'; fi`

chamber-purpleball.o: purpleball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-purpleball.o -MD -MP -MF "$(DEPDIR)/chamber-purpleball.Tpo" -c -o chamber-purpleball.o `test -f 'purpleball.c' || echo '$(srcdir)/'`purpleball.c; \
	then mv -f "$(DEPDIR)/chamber-purpleball.Tpo" "$(DEPDIR)/chamber-purpleball.Po"; else rm -f "$(DEPDIR)/chamber-purpleball.Tpo"; exit 1; fi
#	source='purpleball.c' object='chamber-purpleball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-purpleball.o `test -f 'purpleball.c' || echo '$(srcdir)/'`purpleball.c

chamber-purpleball.obj: purpleball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-purpleball.obj -MD -MP -MF "$(DEPDIR)/chamber-purpleball.Tpo" -c -o chamber-purpleball.obj `if test -f 'purpleball.c'; then $(CYGPATH_W) 'purpleball.c'; else $(CYGPATH_W) '$(srcdir)/purpleball.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-purpleball.Tpo" "$(DEPDIR)/chamber-purpleball.Po"; else rm -f "$(DEPDIR)/chamber-purpleball.Tpo"; exit 1; fi
#	source='purpleball.c' object='chamber-purpleball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-purpleball.obj `if test -f 'purpleball.c'; then $(CYGPATH_W) 'purpleball.c'; else $(CYGPATH_W) '$(srcdir)/purpleball.c'; fi`

chamber-purplepad.o: purplepad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-purplepad.o -MD -MP -MF "$(DEPDIR)/chamber-purplepad.Tpo" -c -o chamber-purplepad.o `test -f 'purplepad.c' || echo '$(srcdir)/'`purplepad.c; \
	then mv -f "$(DEPDIR)/chamber-purplepad.Tpo" "$(DEPDIR)/chamber-purplepad.Po"; else rm -f "$(DEPDIR)/chamber-purplepad.Tpo"; exit 1; fi
#	source='purplepad.c' object='chamber-purplepad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-purplepad.o `test -f 'purplepad.c' || echo '$(srcdir)/'`purplepad.c

chamber-purplepad.obj: purplepad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-purplepad.obj -MD -MP -MF "$(DEPDIR)/chamber-purplepad.Tpo" -c -o chamber-purplepad.obj `if test -f 'purplepad.c'; then $(CYGPATH_W) 'purplepad.c'; else $(CYGPATH_W) '$(srcdir)/purplepad.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-purplepad.Tpo" "$(DEPDIR)/chamber-purplepad.Po"; else rm -f "$(DEPDIR)/chamber-purplepad.Tpo"; exit 1; fi
#	source='purplepad.c' object='chamber-purplepad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-purplepad.obj `if test -f 'purplepad.c'; then $(CYGPATH_W) 'purplepad.c'; else $(CYGPATH_W) '$(srcdir)/purplepad.c'; fi`

chamber-redball.o: redball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-redball.o -MD -MP -MF "$(DEPDIR)/chamber-redball.Tpo" -c -o chamber-redball.o `test -f 'redball.c' || echo '$(srcdir)/'`redball.c; \
	then mv -f "$(DEPDIR)/chamber-redball.Tpo" "$(DEPDIR)/chamber-redball.Po"; else rm -f "$(DEPDIR)/chamber-redball.Tpo"; exit 1; fi
#	source='redball.c' object='chamber-redball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-redball.o `test -f 'redball.c' || echo '$(srcdir)/'`redball.c

chamber-redball.obj: redball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-redball.obj -MD -MP -MF "$(DEPDIR)/chamber-redball.Tpo" -c -o chamber-redball.obj `if test -f 'redball.c'; then $(CYGPATH_W) 'redball.c'; else $(CYGPATH_W) '$(srcdir)/redball.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-redball.Tpo" "$(DEPDIR)/chamber-redball.Po"; else rm -f "$(DEPDIR)/chamber-redball.Tpo"; exit 1; fi
#	source='redball.c' object='chamber-redball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-redball.obj `if test -f 'redball.c'; then $(CYGPATH_W) 'redball.c'; else $(CYGPATH_W) '$(srcdir)/redball.c'; fi`

chamber-redpad.o: redpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-redpad.o -MD -MP -MF "$(DEPDIR)/chamber-redpad.Tpo" -c -o chamber-redpad.o `test -f 'redpad.c' || echo '$(srcdir)/'`redpad.c; \
	then mv -f "$(DEPDIR)/chamber-redpad.Tpo" "$(DEPDIR)/chamber-redpad.Po"; else rm -f "$(DEPDIR)/chamber-redpad.Tpo"; exit 1; fi
#	source='redpad.c' object='chamber-redpad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-redpad.o `test -f 'redpad.c' || echo '$(srcdir)/'`redpad.c

chamber-redpad.obj: redpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-redpad.obj -MD -MP -MF "$(DEPDIR)/chamber-redpad.Tpo" -c -o chamber-redpad.obj `if test -f 'redpad.c'; then $(CYGPATH_W) 'redpad.c'; else $(CYGPATH_W) '$(srcdir)/redpad.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-redpad.Tpo" "$(DEPDIR)/chamber-redpad.Po"; else rm -f "$(DEPDIR)/chamber-redpad.Tpo"; exit 1; fi
#	source='redpad.c' object='chamber-redpad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-redpad.obj `if test -f 'redpad.c'; then $(CYGPATH_W) 'redpad.c'; else $(CYGPATH_W) '$(srcdir)/redpad.c'; fi`

chamber-yellowball.o: yellowball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-yellowball.o -MD -MP -MF "$(DEPDIR)/chamber-yellowball.Tpo" -c -o chamber-yellowball.o `test -f 'yellowball.c' || echo '$(srcdir)/'`yellowball.c; \
	then mv -f "$(DEPDIR)/chamber-yellowball.Tpo" "$(DEPDIR)/chamber-yellowball.Po"; else rm -f "$(DEPDIR)/chamber-yellowball.Tpo"; exit 1; fi
#	source='yellowball.c' object='chamber-yellowball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-yellowball.o `test -f 'yellowball.c' || echo '$(srcdir)/'`yellowball.c

chamber-yellowball.obj: yellowball.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-yellowball.obj -MD -MP -MF "$(DEPDIR)/chamber-yellowball.Tpo" -c -o chamber-yellowball.obj `if test -f 'yellowball.c'; then $(CYGPATH_W) 'yellowball.c'; else $(CYGPATH_W) '$(srcdir)/yellowball.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-yellowball.Tpo" "$(DEPDIR)/chamber-yellowball.Po"; else rm -f "$(DEPDIR)/chamber-yellowball.Tpo"; exit 1; fi
#	source='yellowball.c' object='chamber-yellowball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-yellowball.obj `if test -f 'yellowball.c'; then $(CYGPATH_W) 'yellowball.c'; else $(CYGPATH_W) '$(srcdir)/yellowball.c'; fi`

chamber-slowpad.o: slowpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-slowpad.o -MD -MP -MF "$(DEPDIR)/chamber-slowpad.Tpo" -c -o chamber-slowpad.o `test -f 'slowpad.c' || echo '$(srcdir)/'`slowpad.c; \
	then mv -f "$(DEPDIR)/chamber-slowpad.Tpo" "$(DEPDIR)/chamber-slowpad.Po"; else rm -f "$(DEPDIR)/chamber-slowpad.Tpo"; exit 1; fi
#	source='slowpad.c' object='chamber-slowpad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-slowpad.o `test -f 'slowpad.c' || echo '$(srcdir)/'`slowpad.c

chamber-slowpad.obj: slowpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-slowpad.obj -MD -MP -MF "$(DEPDIR)/chamber-slowpad.Tpo" -c -o chamber-slowpad.obj `if test -f 'slowpad.c'; then $(CYGPATH_W) 'slowpad.c'; else $(CYGPATH_W) '$(srcdir)/slowpad.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-slowpad.Tpo" "$(DEPDIR)/chamber-slowpad.Po"; else rm -f "$(DEPDIR)/chamber-slowpad.Tpo"; exit 1; fi
#	source='slowpad.c' object='chamber-slowpad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-slowpad.obj `if test -f 'slowpad.c'; then $(CYGPATH_W) 'slowpad.c'; else $(CYGPATH_W) '$(srcdir)/slowpad.c'; fi`

chamber-usage.o: usage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-usage.o -MD -MP -MF "$(DEPDIR)/chamber-usage.Tpo" -c -o chamber-usage.o `test -f 'usage.c' || echo '$(srcdir)/'`usage.c; \
	then mv -f "$(DEPDIR)/chamber-usage.Tpo" "$(DEPDIR)/chamber-usage.Po"; else rm -f "$(DEPDIR)/chamber-usage.Tpo"; exit 1; fi
#	source='usage.c' object='chamber-usage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-usage.o `test -f 'usage.c' || echo '$(srcdir)/'`usage.c

chamber-usage.obj: usage.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-usage.obj -MD -MP -MF "$(DEPDIR)/chamber-usage.Tpo" -c -o chamber-usage.obj `if test -f 'usage.c'; then $(CYGPATH_W) 'usage.c'; else $(CYGPATH_W) '$(srcdir)/usage.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-usage.Tpo" "$(DEPDIR)/chamber-usage.Po"; else rm -f "$(DEPDIR)/chamber-usage.Tpo"; exit 1; fi
#	source='usage.c' object='chamber-usage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-usage.obj `if test -f 'usage.c'; then $(CYGPATH_W) 'usage.c'; else $(CYGPATH_W) '$(srcdir)/usage.c'; fi`

chamber-yellowpad.o: yellowpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-yellowpad.o -MD -MP -MF "$(DEPDIR)/chamber-yellowpad.Tpo" -c -o chamber-yellowpad.o `test -f 'yellowpad.c' || echo '$(srcdir)/'`yellowpad.c; \
	then mv -f "$(DEPDIR)/chamber-yellowpad.Tpo" "$(DEPDIR)/chamber-yellowpad.Po"; else rm -f "$(DEPDIR)/chamber-yellowpad.Tpo"; exit 1; fi
#	source='yellowpad.c' object='chamber-yellowpad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-yellowpad.o `test -f 'yellowpad.c' || echo '$(srcdir)/'`yellowpad.c

chamber-yellowpad.obj: yellowpad.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -MT chamber-yellowpad.obj -MD -MP -MF "$(DEPDIR)/chamber-yellowpad.Tpo" -c -o chamber-yellowpad.obj `if test -f 'yellowpad.c'; then $(CYGPATH_W) 'yellowpad.c'; else $(CYGPATH_W) '$(srcdir)/yellowpad.c'; fi`; \
	then mv -f "$(DEPDIR)/chamber-yellowpad.Tpo" "$(DEPDIR)/chamber-yellowpad.Po"; else rm -f "$(DEPDIR)/chamber-yellowpad.Tpo"; exit 1; fi
#	source='yellowpad.c' object='chamber-yellowpad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(chamber_CFLAGS) $(CFLAGS) -c -o chamber-yellowpad.obj `if test -f 'yellowpad.c'; then $(CYGPATH_W) 'yellowpad.c'; else $(CYGPATH_W) '$(srcdir)/yellowpad.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am


checkin:
	ci -l ${humansrc} ${EXTRA_DIST} Makefile.am

pretty:
	indent ${humansrc}

stats:
	@wc ${humansrc}
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
